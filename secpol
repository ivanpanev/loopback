---
# This file is included from the main play with:
#   vars:
#     current_gnid: "{{ extra_vars.RequestDetails.GNID }}"

# ───────────────────────────────────────────────────────────────────────────────
# 1.  Build the endpoint matrix once
# ───────────────────────────────────────────────────────────────────────────────
- name: Define endpoint matrix
  set_fact:
    endpoints:
      - { path: "dcim/devices/",                 role: "478" }   # Physical PA
      - { path: "virtualization/virtual-machines/", role: "136" }   # uCPE PA
      - { path: "virtualization/virtual-machines/", role: "477" }   # VDC  PA
      - { path: "virtualization/virtual-machines/", role: "226" }   # NFV  PA
      - { path: "virtualization/virtual-machines/", role: "85"  }   # Legacy
  changed_when: false

# ───────────────────────────────────────────────────────────────────────────────
# 2.  Hit NetBox once per endpoint (loop on the TASK, not on a block)
# ───────────────────────────────────────────────────────────────────────────────
- name: Query NetBox for {{ current_gnid }} on every endpoint
  uri:
    url: "{{ netbox_base }}{{ item.path }}?role_id={{ item.role }}&cf_cmd_gnid={{ current_gnid }}"
    headers:
      Authorization: "Token {{ netbox_token }}"
      Accept: "application/json"
    validate_certs: yes
    return_content: yes
  delegate_to: "{{ '10.160.2.22' if item.role in ['478','477','226','85']
                               else 'localhost' }}"
  loop: "{{ endpoints }}"
  loop_control:
    label: "{{ item.role }}"
  register: netbox_query
  changed_when: false
  failed_when: false

# ───────────────────────────────────────────────────────────────────────────────
# 3.  Pick the FIRST non-empty result and expose facts
# ───────────────────────────────────────────────────────────────────────────────
# We zip the result list with its index so that we can get back to the role ID
- name: Extract data from the first non-empty hit
  set_fact:
    nb_primary_ip: "{{ (item.0.json.results[0].primary_ip4.address
                        | default(item.0.json.results[0].primary_ip.address))
                        | split('/') | first }}"
    nb_role_id:     "{{ endpoints[item.1].role }}"
    nb_panorama_ip: "{{ item.0.json.results[0].custom_fields.panorama_ip
                        | default('') }}"
  loop: "{{ netbox_query.results | zip(range(0, netbox_query.results | length)) }}"
  loop_control:
    loop_var: item   # item.0 = result object, item.1 = index
  when:
    - item.0.json.count | default(0) | int > 0
    - nb_primary_ip is not defined      # stop after the first match

- name: Derive jumphost from role ID
  set_fact:
    nb_jumphost: "{{ '10.16.2.22'
                     if nb_role_id in ['478','477','226','85']
                     else 'localhost' }}"
  when: nb_primary_ip is defined
