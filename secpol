import urllib.parse, urllib3, requests, os, xml.etree.ElementTree as ET
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def get_api_key(palo_ip, username, password):
    base = f"https://{palo_ip}/api/"           # ← keep the trailing slash
    url  = base + "?" + urllib.parse.urlencode({
        "type": "keygen",
        "user": username,
        "password": password
    })

    # disable any proxy inherited from the environment
    proxies_off = {"http": None, "https": None}

    resp = requests.get(url, verify=False, timeout=10, proxies=proxies_off)
    resp.raise_for_status()

    root = ET.fromstring(resp.content)
    key  = root.findtext(".//key")
    if not key:
        raise Exception("key element missing in response")
    return key



- name: Run main.py on {{ nb_jumphost }}
  command: >
    python3 {{
      (nb_jumphost == 'localhost')
      | ternary(scripts_dir + '/main.py', '/tmp/palo_scripts/main.py')
    }}
  delegate_to: "{{ nb_jumphost }}"
  become: false
  environment:
    EXTRA_VARS: "{{ extra_vars_json }}"
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
    NO_PROXY: "{{ nb_primary_ip }}"
  register: python_result
